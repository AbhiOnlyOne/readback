- title "#{@specialty_show.name}"
- headline "#{@specialty_show.name}"
- subtitle "Coordinated by ".html_safe + link_to("#{@specialty_show.coordinator.name}", @specialty_show.coordinator)
- back_link link_to "Back to Schedule", edit_semester_path(@specialty_show.semester)
= content_for :sidebar do
  =render 'form'

%h3 Rotating Hosts
.subtitle
  =link_to "Assign", deal_specialty_show_path(@specialty_show), method: :patch
  rotating hosts to unassigned episodes automatically.
.rotating-hosts
  -@specialty_show.rotating_hosts.each do |host|
    .tiled.rotating-host{data: {dj_id: host.id}}
      =render host

%h3 Episodes
.episodes
  - @episodes.each do |episode|
    .showinfo.tiled{class: [('episode'  unless episode.past?), ('episode-unassigned' unless episode.dj)], data: {episode_path: episode_path(episode)}}
      %p=episode.date_string
      %p.with
        =episode.dj || "Unassigned"
        -# If user cannot request sub for this show, don't take up the extra line below
        -#-if episode.past?
          -#%span.show-instance-links
            -#=link_to "#{episode.songs.count} #{"song".pluralize(episode.songs.count)}",
              -#episode
      %p.rightalign
        &nbsp;
        - if episode.past?
          =link_to "#{episode.songs.count} #{"song".pluralize(episode.songs.count)}",
            episode_songs_path(episode)
        - elsif episode.dj
          =link_to "Request Substitute", episode_request_sub_path(episode)
